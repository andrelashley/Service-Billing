@model Service_Billing.Models.ClientAccount
@{
    ViewData["Title"] = "Client Details";
    Layout = "_Layout";
    var parms = new Dictionary<string, string>
{
{ "clientNumber", Model.ClientNumber.ToString() }
};
}
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims
@inject IAuthorizationService AuthorizationService
@{
    var user = User as ClaimsPrincipal;
    var isMinistryClient = user?.IsMinistryClient(AuthorizationService) ?? false;
}
<h1>Client Account Information</h1>
<div>
    <h4>@Model.Id-@Model.Name</h4>
    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded && Model.IsActive && !isMinistryClient)
    {
        <input type="submit" value="Deactivate This Client" id="deactivate-client" class="btn btn-primary" onclick="confirmDeactivateClient(@Model.Id)" title="Set this client and all associated charges to inactive. This action is reversible." />
    }
    else if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded)
    {
        <input type="submit" value="Reactivate" class="btn btn-primary" onclick="confirmReactivateClient(@Model.Id)" title="Reactivate this client. Associated charges must be reactivated separately."/>
    }
    <hr />
    <table>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => Model.Name)
            </td>
            <td>
                @Html.DisplayFor(model => Model.Name)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => Model.ClientNumber)
            </td>
            <td>
                @Html.DisplayFor(model => Model.ClientNumber)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => Model.ResponsibilityCentre)
            </td>
            <td>
                @Html.DisplayFor(model => Model.ResponsibilityCentre)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => Model.ServiceLine)
            </td>
            <td>
                @String.Format("{0:00000}", Model.ServiceLine)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => Model.STOB)
            </td>
            <td>
                @String.Format("{0:0000}", Model.STOB)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => Model.Project)
            </td>
            <td>
                @Html.DisplayFor(model => Model.Project)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => Model.ExpenseAuthorityName)
            </td>
            <td>
                @Html.DisplayFor(model => Model.ExpenseAuthorityName)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => Model.ServicesEnabled)
            </td>
            <td>
                @if (String.IsNullOrEmpty(Model.ServicesEnabled))
                {
                    <br />
                }
                else
                {
                    @Html.DisplayFor(model => Model.ServicesEnabled)
                }
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => Model.IsApprovedByEA)
            </td>
            <td>
                @Html.DisplayFor(model => Model.IsApprovedByEA)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => Model.Notes)
            </td>
            <td>
                @Html.DisplayFor(model => Model.Notes)
            </td>
        </tr>
    </table>
    <partial name="_ClientTeam" model="@Model"/>
    <div class="entity-details-buttons">
        <a asp-action="Edit" asp-route-id="@Model?.Id" class="btn btn-primary" type="button">Edit Account</a>
    </div>
    <h3>Active Charges</h3>
     <div id="accordion">
     @foreach (Bill charge in Model.Bills)
     {
        @if (charge.IsActive)
        {
                <h4>@charge.Title - @charge.ServiceCategory.Name</h4>
                <div>
                    <table>
                        <tr>
                            <td class="table-right">
                               URL or IDIR
                            </td>
                            <td>
                                @Html.DisplayFor(Bill => charge.IdirOrUrl)
                            </td>
                        </tr>
                        <tr>
                            <td class="table-right">
                                Unit of Measure
                            </td>
                            <td>
                                @Html.DisplayFor(Bill => charge.ServiceCategory.UOM)
                            </td>
                        </tr>
                        <tr>
                            <td class="table-right">
                                Quantity
                            </td>
                            <td>
                                @Html.DisplayFor(Bill => charge.Quantity)
                            </td>
                        </tr>
                        <tr>
                            <td class="table-right">
                                Amount
                            </td>
                            <td>
                                @Html.DisplayFor(Bill => charge.Amount)
                            </td>
                        </tr>
                        <tr>
                            <td class="table-right">
                                Fiscal Period
                            </td>
                            <td>
                                @Html.DisplayFor(Bill => charge.FiscalPeriod)
                            </td>
                        </tr>
                        <tr>
                            <td class="table-right">
                                Start Date
                            </td>
                            <td>
                                @Html.DisplayFor(Bill => charge.StartDate)
                            </td>
                        </tr>
                        <tr>
                            <td class="table-right">
                                End Date
                            </td>
                            <td>
                                @Html.DisplayFor(Bill => charge.EndDate)
                            </td>
                        </tr>
                        <tr>
                            <td class="table-right">
                                Created By
                            </td>
                            <td>
                                @Html.DisplayFor(Bill => charge.CreatedBy)
                            </td>
                        </tr>
                        <tr>
                            <td class="table-right">
                                Notes
                            </td>
                            <td>
                                @Html.DisplayFor(Bill => charge.Notes)
                            </td>
                        </tr>
                        <tr>
                            <td><a asp-action="Details" asp-controller="Bills" asp-route-id="@charge.Id">see charge details</a></td>
                            @if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded && !isMinistryClient)
                            {
                                <td><input type="submit" value="Deactivate this Charge" class="btn btn-primary" onclick="setIsActiveForCharge(@charge.Id, false)" /></td>
                            }
                        </tr>
                    </table>
                </div>
        }
     }
     </div>

    @if (Model.Bills.FirstOrDefault(x => !x.IsActive) != null)
    {
        <h3>Inactive Charges</h3>
        <p>These are old or cancelled charges, and are not factored into quarterly reporting.</p>
        <div id="inactive-accordion">
       
                @foreach (Bill charge in Model.Bills)
                {
                    if (charge.IsActive)
                        continue;

                        <h4>@charge.Title - @charge.ServiceCategory.Name</h4>
                        <div>
                            <table>
                                <tr>
                                    <td class="table-right">
                                        URL or IDIR
                                    </td>
                                    <td>
                                        @Html.DisplayFor(Bill => charge.IdirOrUrl)
                                    </td>
                                </tr>
                                <tr>
                                    <td class="table-right">
                                        Unit of Measure
                                    </td>
                                    <td>
                                        @Html.DisplayFor(Bill => charge.ServiceCategory.UOM)
                                    </td>
                                </tr>
                                <tr>
                                    <td class="table-right">
                                        Quantity
                                    </td>
                                    <td>
                                        @Html.DisplayFor(Bill => charge.Quantity)
                                    </td>
                                </tr>
                                <tr>
                                    <td class="table-right">
                                        Amount
                                    </td>
                                    <td>
                                        @Html.DisplayFor(Bill => charge.Amount)
                                    </td>
                                </tr>
                                <tr>
                                    <td class="table-right">
                                        Fiscal Period
                                    </td>
                                    <td>
                                        @Html.DisplayFor(Bill => charge.FiscalPeriod)
                                    </td>
                                </tr>
                                <tr>
                                    <td class="table-right">
                                        Start Date
                                    </td>
                                    <td>
                                        @Html.DisplayFor(Bill => charge.StartDate)
                                    </td>
                                </tr>
                                <tr>
                                    <td class="table-right">
                                        End Date
                                    </td>
                                    <td>
                                        @Html.DisplayFor(Bill => charge.EndDate)
                                    </td>
                                </tr>
                                <tr>
                                    <td class="table-right">
                                        Created By
                                    </td>
                                    <td>
                                        @Html.DisplayFor(Bill => charge.CreatedBy)
                                    </td>
                                </tr>
                                <tr>
                                    <td class="table-right">
                                        Notes
                                    </td>
                                    <td>
                                        @Html.DisplayFor(Bill => charge.Notes)
                                    </td>
                                </tr>
                                <tr>
                                    <td><a asp-action="Details" asp-controller="Bills" asp-route-id="@charge.Id">see charge details</a></td>
                                    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded && !isMinistryClient)
                                    {
                                        <td><input type="submit" value="Reactivate" class="btn btn-default" onclick="setIsActiveForCharge(@charge.Id, true)" /></td>
                                    }
                                </tr>
                            </table>
                        </div>
                }
        </div>
    }
</div>
@if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded)
{
    <div class="bottom-nav">
        <a asp-action="Index" class="btn btn-primary" type="button">Back to List</a>
    </div>
    <div id="dialog" title="Set this charge to Inactive?">
        <p>Inactive charges are not factored into quarterly reports, and deactivated fixed services are not carried to future billing cycles.</p>
    </div>
    <div id="reactivate-charge-dialog" title="Reactivate this charge?">
        <p>This charge will be made active. It will be counted in quarterly reporting, and included in future billing cycles if appropriate.</p>
    </div>
    <div id="deactivate-client-dialog" title="Whoa, Really?">
        <p>This client will be set to inactive, and as well all its associated charges.</p>
    </div>
    <div id="reactivate-client-dialog" title="Reactivate Client?">
        <p>This client will be set to active, and can be billed for new charges.</p>
        <p>Any charges associated with this client that were set to inactive can be reactivated from the list of inactive charges below.</p>
    </div>
}
@section Scripts
{
    <script>
        $(function () {
            $("#dialog").dialog({
                resizable: false,
                height: "auto",
                width: 400,
                autoOpen: false,
                buttons: {
                    "Set Inactive": function () {
                        $(this).dialog("close");
                        setIsActiveForCharge($(this).dialog("option", "id"), false);
                    },
                    Cancel: function () {
                        $(this).dialog("close");
                    }
                }
            });
        });
        const confirmInactive = ((val) => {
            $("#dialog").dialog("option", "id", val);
            $("#dialog").dialog("open");
        });

        const setIsActiveForCharge = ((id, active) => {
            var url = "../../Bills/SetIsActiveForCharge?id=" + id + "&active=" + active;
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {

                    window.location.reload();
                }
            };
            xhr.open('post', url);
            xhr.send();
        });

        $(function () {
            $("#reactivate-charge-dialog").dialog({
                resizable: false,
                height: "auto",
                width: 400,
                autoOpen: false,
                buttons: {
                    "Reactivate": function () {
                        $(this).dialog("close");
                        setIsActiveForCharge($(this).dialog("option", "id"), true);
                    },
                    Cancel: function () {
                        $(this).dialog("close");
                    }
                }
            });
        });
        const confirmReactivateCharge = ((val) => {
            $("#reactivate-charge-dialog").dialog("option", "id", val);
            $("#reactivate-charge-dialog").dialog("open");
        });
        $(function () {
            $("#reactivate-client-dialog").dialog({
                resizable: false,
                height: "auto",
                width: 400,
                autoOpen: false,
                buttons: {
                    "Reactivate": function () {
                        $(this).dialog("close");
                        setIsActiveForClient($(this).dialog("option", "id"), true);
                    },
                    Cancel: function () {
                        $(this).dialog("close");
                    }
                }
            });
        });
        $(function () {
            $("#deactivate-client-dialog").dialog({
                resizable: false,
                height: "auto",
                width: 400,
                autoOpen: false,
                buttons: {
                    "Deactivate Client": function () {
                        $(this).dialog("close");
                        setIsActiveForClient($(this).dialog("option", "id"), false);
                    },
                    Cancel: function () {
                        $(this).dialog("close");
                    }
                }
            });
        });

        const confirmReactivateClient = ((val) => {
            $("#reactivate-client-dialog").dialog("option", "id", val);
            $("#reactivate-client-dialog").dialog("open");
        });
        const confirmDeactivateClient = ((val) => {
            $("#deactivate-client-dialog").dialog("option", "id", val);
            $("#deactivate-client-dialog").dialog("open");
        });

        const setIsActiveForClient = ((id, active) => {
            var url = "../../ClientAccount/SetIsActiveForClient?id=" + id + "&active=" + active;
            var xhr = new XMLHttpRequest();
            xhr.onreadystatechange = function () {
                if (this.readyState == 4 && this.status == 200) {

                    window.location.reload();
                }
            };
            xhr.open('post', url);
            xhr.send();
        });
        $(function () {
            $("#accordion").accordion({
                collapsible: true
            });
            $("#inactive-accordion").accordion({ collapsible: true });
        });
    </script>
}
