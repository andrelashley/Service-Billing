@using Service_Billing.ViewModels;
@using Microsoft.AspNetCore.Authorization
@using System.Security.Claims

@{
    ViewData["Title"] = "Index of Client Accounts";
    Layout = "_Layout";
}

@inject IAuthorizationService AuthorizationService
@model IEnumerable<ClientAccount>
@{
    IEnumerable<Ministry> ministries = ViewData["Ministries"] as IEnumerable<Ministry>;
    string threeFmt = "000";
}

<h1>Manage Client Account Information</h1>

<div class="row row-cols-1 row-cols-md-3 g-4">

    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded && !User.IsInRole("GDXBillingService.User"))
    {
        <div class="table-filter-section">
            <form asp-action="Index" method="get">
                <fieldset>
                    <legend>Filter by...</legend>
                    <div class="ui-section">
                        <div>
                            <label for="ministryFilter">Organization</label>
                            <select name="ministryFilter">
                                <option value="" disabled selected hidden></option>
                                @if (ministries != null)
                                {
                                    foreach (Ministry ministry in ministries)
                                    {
                                        string selectedMinistry = "";
                                        if (ViewData["MinistryFilter"] != null)
                                            selectedMinistry = ViewData["MinistryFilter"].ToString();

                                        if (!String.IsNullOrEmpty(selectedMinistry) && selectedMinistry == ministry.Acronym)
                                        {
                                            <option selected="true" value="@ministry.Acronym">@ministry.Acronym - @ministry.Title</option>
                                        }
                                        else
                                        {
                                            <option value="@ministry.Acronym">@ministry.Acronym - @ministry.Title</option>
                                        }
                                    }
                                }
                            </select>
                            <label for="numberFilter">GDX Client No.</label>
                            <input type="number" name="numberFilter" value="@ViewData["NumberFilter"]" />
                        </div>
                        <div>
                            <label for="authorityFilter">Expense Authority</label>
                            <input type="text" name="authorityFilter" value="@ViewData["AuthorityFilter"]" />
                            <label for="primaryContactFilter">Primary Contact</label>
                            <input type="text" name="primaryContactFilter" value="@ViewData["PrimaryContactFilter"]" />
                         @*    <label for="servicesEnabled">Services Enabled</label>
                            <input type="text" name="servicesEnabled" value="@ViewData["ServicesEnabled"]" /> *@
                            @*    <label for="notes">Notes</label>
                        <input type="text" name="servicesEnabled" value="@ViewData["ServicesEnabled"]" /> *@
                            <label for="keyword">Keyword</label>
                            <input type="text" name="keyword" value="@ViewData["Keyword"]" />
                        </div>
                        <div class="ui-section-buttons">
                            <div class="option-buttons">
                                <input type="submit" value="Filter" class="btn btn-default" />
                                <a asp-action="Index">Back to Full List</a>
                            </div>

                        </div>
                    </div>
                </fieldset>
                <div class="export-button">
                    <input type="submit" value="Export to Excel" formaction="/ClientAccount/WriteToExcel" formmethod="get" />
                </div>
                @if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded)
                {
                    <div class="create-new-button">
                        <input type="submit" value="Create Account" formaction="/ClientAccount/Create" formmethod="get" />
                    </div>
                }
            </form>
        </div>
    }
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">GDX Client No. and Account Details</th>
                <th scope="col">GDX Client Name</th>
                <th scope="col">CAS Client No.</th>
                <th scope="col">Expense Authority</th>
                <th scope="col">Primary Contact</th>
                <th scope="col">Active?</th>
            </tr>
        </thead>
        <tbody>
            @foreach (ClientAccount account in Model)
            {
                var parms = new Dictionary<string, string>
            {
            { "clientNumber",  account.ClientNumber.ToString()}
            };

                <tr>
                    <td>
                        <a asp-controller="ClientAccount"
                           asp-action="Details"
                           asp-route-id="@account.Id">@account.Id</a>
                    </td>
                    <td>@account.Name</td>
                    <td>
                        @account.ClientNumber
                    </td>
                    
                    <td>@account.ExpenseAuthorityName</td>
                    <td>@account.PrimaryContact</td>
                    <td>@account.IsActive</td>
                    
                </tr>
            }
        </tbody>
    </table>
</div>

@section Scripts {

    <script>
        $(document).ready(() => {
            // nav link highlighting
            $('li').removeClass("active-nav-link");
            $('#account-index-link').addClass("active-nav-link");
        });
    </script>
}
