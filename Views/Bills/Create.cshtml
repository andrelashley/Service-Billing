@model Service_Billing.Models.Bill

@{
    ViewData["Title"] = "Create";
    Layout = "_Layout";
}
@{
    IEnumerable<ServiceCategory> categories = ViewData["Categories"] as IEnumerable<ServiceCategory>;
    string? currentUserName = ViewData["CurrentUser"] != null ? ViewData["CurrentUser"].ToString() : "";
}

<h1>Create</h1>

<h4>Charge</h4>
<hr />
<div class="row row-cols-1 row-cols-md-3 g-4">
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="@Model.ClientName">Client: </label>
                <input asp-for="@Model.ClientName" id="clientInput" class="form-control" title="Begin entering a client name, and a list of matching clients will appear." />
                <span asp-validation-for="@Model.ClientName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="hidden" asp-for="@Model.ClientAccountId" id="clientIdInput" class="form-control" />
                <span asp-validation-for="@Model.ClientAccountId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Title" class="control-label"></label>
                <input asp-for="Title" class="form-control" />
                <span asp-validation-for="Title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="IdirOrUrl" class="control-label"></label>
                <input asp-for="IdirOrUrl" class="form-control" />
                <span asp-validation-for="IdirOrUrl" class="text-danger"></span>
            </div>
            @* <input asp-for="@Model.ServiceCategoryId" id="categoryIdInput" class="form-control" readonly="true" /> *@
                <input type="hidden" asp-for="@Model.ServiceCategoryId" id="categoryIdInput" class="form-control" />
            @await Component.InvokeAsync("ServiceCategoryInput", new { categories =  categories, id = Model.ServiceCategoryId })
   
            
            <div class="form-group">
                <label asp-for="Amount" class="control-label"></label>
                <input asp-for="Amount" class="form-control" id="amount" />
                <span asp-validation-for="Amount" class="text-danger"></span>
                <div class="input-info">
                    Typically, amount is calculated based on service and quantity, and shouldn't be changed. It can be overridden here if you have a good reason to do so. 
                </div>
            </div>
            <div class="form-group">
                <label>UOM</label>
                <input id="uom" class="form-control" readonly="true" />
            </div>
            <div class="form-group">
                <label asp-for="FiscalPeriod" class="control-label"></label>
                <input asp-for="FiscalPeriod" class="form-control" />
                <span asp-validation-for="FiscalPeriod" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" id="quantity" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TicketNumberAndRequester" class="control-label"></label>
                <input asp-for="TicketNumberAndRequester" class="form-control" />
                <span asp-validation-for="TicketNumberAndRequester" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BillingCycle" class="control-label"></label>
                <input asp-for="BillingCycle" class="form-control" />
                <span asp-validation-for="BillingCycle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="CreatedBy" class="control-label"></label>
                @* <input asp-for="CreatedBy" value="@currentUserName" class="form-control" /> *@
                <input asp-for="CreatedBy" class="form-control" />
                <span asp-validation-for="CreatedBy" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts{
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script>
        $(document).ready(function () {
            calculateAmount = () => {
                if(!$("#quantity")){
                    $("#quantity").val(1);
                }
                var url = "../../Bills/GetBillAmount?serviceId=" + $("#categorySelect").val() + "&quantity=" + $("#quantity").val();
                var xhr = new XMLHttpRequest();
                xhr.responseType = "JSON";
                xhr.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        var response = JSON.parse(xhr.response);
                        $("#amount").val(response['amount']);
                        $("#uom").val(response['uom']);
                    }
                };
                xhr.open('get', url);
                xhr.send();
            }
            $("#categorySelect").on("change", (e) => {
                calculateAmount();
                if ($("#categorySelect").val() < 21) { //id's greater than 21 are older categories, with slightly different names and prices
                    $("#categoryWarning").hide();
                    console.log($('#categorySelect').val());
                    $("#categoryIdInput").val($("#categorySelect").val());
                }
            });
            $("#quantity").on("change", (e) => {
                calculateAmount();
            });

            var clientsMatchingSearch = [];
            createClientSelect = () => {
                var url = "../../Bills/GetClients";
                var xhr = new XMLHttpRequest();
                xhr.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        clientsMatchingSearch = [];
                        var data = JSON.parse(xhr.response);

                        for (const client in data) {
                            clientsMatchingSearch.push({ label: data[client].name, "clientId": data[client].id });
                        }

                        $("#clientInput").autocomplete({
                            source: clientsMatchingSearch
                        });

                    }
                };
                xhr.open('get', url);
                xhr.send();

                $("#clientInput").autocomplete({
                    source: clientsMatchingSearch,
                    delay: 500,
                    select: function (event, ui) {
                        $("#clientIdInput").val(ui.item.clientId);
                        $("#clientInput").text(ui.item.label);
                    },
                    minLength: 0
                });
            }
            createClientSelect();
        });
    </script>
}