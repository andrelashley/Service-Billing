@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@model Service_Billing.Models.Bill
@{
    ViewData["Title"] = "Charge Details";
    ServiceCategory? serviceCategory = ViewData["serviceCategory"] as ServiceCategory;
    ClientAccount? clientAccount = ViewData["clientAccount"] as ClientAccount;
}
<h1>Details</h1>
<div>
    <h4>@Model.Id - @Model.Title</h4>
    <hr />
    <table>
        <tr>
            <td class="table-right">
                Client Account
            </td>
            <td>
                @if (clientAccount != null)
                {
                    <a asp-controller="ClientAccount"
                       asp-action="Details"
                       asp-route-id="@clientAccount.Id">@clientAccount.Name</a>
                }
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => model.Id)
            </td>
            <td>
                @Html.DisplayFor(model => model.Id)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => model.Title)
            </td>
            <td>
                @Html.DisplayFor(model => model.Title)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => model.IdirOrUrl)
            </td>
            <td>
                @if (!String.IsNullOrEmpty(Model.IdirOrUrl) && Model.IdirOrUrl.ToLower().StartsWith("http"))
                {
                    <a href="@Model.IdirOrUrl" target="blank">@Html.DisplayFor(model => model.IdirOrUrl)</a>
                }
                else if (!String.IsNullOrEmpty(Model.IdirOrUrl))
                {
                    @Model.IdirOrUrl
                }
                else
                {
                    <br />
                }
            </td>
        </tr>
        <tr>
            <td class="table-right">
                Service Category
            </td>
            <td>
                @if (serviceCategory != null && !String.IsNullOrEmpty(serviceCategory.Name))
                {
                    @serviceCategory.Name
                }
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => model.FiscalPeriodString)
            </td>
            <td>
                @Html.DisplayFor(model => model.FiscalPeriodString)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => model.Quantity)
            </td>
            <td>
                @Html.DisplayFor(model => model.Quantity)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                UOM
            </td>
            <td>
                @if (serviceCategory != null && !String.IsNullOrEmpty(serviceCategory.UOM))
                {
                    @serviceCategory.UOM
                }
                else
                {
                    <br />
                }
            </td>
        </tr>
        <tr>
            <td class="table-right">
                Expense Authority
            </td>
            <td>
                @if (clientAccount != null && !String.IsNullOrEmpty(clientAccount.ExpenseAuthorityName))
                {
                    @clientAccount.ExpenseAuthorityName

                    <br />
                }
                else
                {
                    <br />
                }
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => model.StartDate)
            </td>
            <td>
                @Html.DisplayFor(model => model.StartDate)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => model.EndDate)
            </td>
            <td>
                @Html.DisplayFor(model => model.EndDate)
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => model.TicketNumberAndRequester)
            </td>
            <td>
                @if (!String.IsNullOrEmpty(Model.TicketNumberAndRequester))
                {
                    @Html.DisplayFor(model => model.TicketNumberAndRequester)
                }
                else
                {
                    <br />
                }
            </td>
        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => model.CreatedBy)
            </td>
            <td>
                @if (!String.IsNullOrEmpty(Model.CreatedBy))
                {
                    @Html.DisplayFor(model => model.CreatedBy)
                }
                else
                {
                    <br />
                }
            </td>
        </tr>
        <tr>
            <td class="table-right">
                Aggregate GL Code
            </td>
            <td>
                @Model.ClientAccount?.AggregatedGLCode
            </td>

        </tr>
        <tr>
            <td class="table-right">
                @Html.DisplayNameFor(model => Model.Notes)
            </td>
            <td>
                @Html.DisplayFor(model => Model.Notes)
            </td>
        </tr>
    </table>
</div>
<div class="bottom-nav">
    @if (!User.IsInRole("GDXBillingService.User"))
    {
        <a asp-action="Edit" asp-route-id="@Model?.Id">Edit</a> @:|
    }
    <a asp-action="Index">Back to List</a>
</div>
