@using Service_Billing.ViewModels;
@model AllBillsViewModel;
@{
    IEnumerable<Ministry> ministries = ViewData["Ministries"] as IEnumerable<Ministry>;
    bool current = ViewData["Quarter"] == "Current Quarter";
    bool previous = ViewData["Quarter"] == "Previous Quarter";
    bool all = ViewData["Quarter"] == "All Quarters";
}

<h1>Bill info</h1>

@if (!Model.Bills.Any())
{
    if (!String.IsNullOrEmpty(ViewData["ClientNumber"].ToString()) && int.Parse(ViewData["ClientNumber"].ToString()) > 0)
    {
        <h3>No charges for client number @ViewData["ClientNumber"] have been found for the selected fiscal period. You can try searching previous or all quarters, or clearing other search filters.</h3>
    }
    else
    {
        <h3>No charges matching your search parameters have been found. Try searching in another quarter, 
            or change your filter parameters.</h3>
    }
}
<div class="row row-cols-1 row-cols-md-3 g-4">
@*     @Html.ActionLink("Current Quarter", "Index", new { quarterFilter = "current" }) | 
    @Html.ActionLink("Previous Quarter", "Index", new { quarterFilter = "previous" }) | 
    @Html.ActionLink("All Quarters", "Index", new { quarterFilter = "all" }) *@
    <div>
        <a asp-controller="Bills"
           asp-action="Create">enter a new bill</a>
    </div>
    <h2>Fiscal Period: @ViewData["Quarter"]</h2>

    <div class="table-filter-section">
        <h3>Filter by...</h3>
        <form asp-action="Index" method="get">
            <div id="quarter-select">
                <label for="quarterFilter">Select Quarter</label>
                <select name="quarterFilter">
                    <option value="current" selected="@current">Current</option>
                    <option value="previous" selected="@previous">Previous</option>
                    <option value="all" selected="@all">All</option>
                </select>
            </div>
            <label for="ministryFilter">Ministry</label>
            <select name="ministryFilter">
                <option value="" disabled selected hidden></option>
                @if (ministries != null)
                {
                    foreach (Ministry ministry in ministries)
                    {
                        string selectedMinistry = "";
                        if(ViewData["MinistryFilter"] != null)
                            selectedMinistry = ViewData["MinistryFilter"].ToString();

                        if (!String.IsNullOrEmpty(selectedMinistry) && selectedMinistry == ministry.Acronym)
                        {
                            <option selected="true" value="@ministry.Acronym">@ministry.Acronym - @ministry.Title</option>
                        }
                        else
                        {
                            <option value="@ministry.Acronym">@ministry.Acronym - @ministry.Title</option>
                        }
                    }
                }
            </select>
            @*<input type="text" name="clientFilter" value="@ViewData["ClientFilter"]" />*@
            <label for="titleFilter">Title</label>
            <input type="text" name="titleFilter" value="@ViewData["TitleFilter"]" />
            <label for="categoryFilter">Service Category</label>
            <select name="categoryFilter" value="@ViewData["CategoryFilter"]">
                <option value="-1"></option>
                @foreach(ServiceCategory category in ViewBag.ServiceCategories)
                {
                    if (ViewData["CategoryFilter"] != null && category.ServiceId == (int)ViewData["CategoryFilter"])
                    {
                        <option value="@category.ServiceId" selected>@category.Name</option>
                    }
                    else
                    {
                        <option value="@category.ServiceId">@category.Name</option>
                    }
                }
            </select>
            <label for="authorityFilter">Expense Authority</label>
            <input type="text" name="authorityFilter" value="@ViewData["AuthorityFilter"]" />
            <label for="clientNumber">Client #</label>
            <input type="number" name="clientNumber" value="@ViewData["ClientNumber"]" />
            <label for="meFilter">Created by me</label>
            <input type="checkbox" name="meFilter" value="@ViewData["MeFilter"] onclick="return flipMeBool()" title="must match your IDIR displayname, i.e. 'lastname, firstname Ministry'"/>
            <input type="text" name="quarterFilter" value="@ViewData["QuarterFilter"]" hidden />
            <input type="submit" value="Filter" class="btn btn-default" /> |
            <a asp-action="Index">Back to Full List</a>
            <input type="submit" value="Export to CSV" formaction="Bills/WriteToCSV" formmethod="post" />
        </form>
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Client</th>
                <th scope="col">Title</th>
                <th scope="col">Service Category</th>
                @if (ViewData["Quarter"] == "All Quarters")
                {
                   <th>Fiscal Period</th>
                }
                <th scope="col">Amount</th>
                <th scope="col">Unit Price</th>
                <th scope="col">Quantity</th>
                <th scope="col">UOM</th>
                <th scope="col">Expense Authority</th>
                <th scope="col">Created By</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bill in Model.Bills)
            {
                var category = Model.ServiceCategories.FirstOrDefault(s => s.ServiceId == bill.ServiceCategoryId);
                var client = Model.ClientAccounts.FirstOrDefault(c => c.Id == bill.ClientAccountId);
                <tr>
                    <td>@bill.ClientName</td>
                    <td>@bill.Title</td>
                    <td>@{
                           
                            if(category != null)
                            {
                                @category.Name;
                            }
                        }
                        </td>
                    @if (ViewData["Quarter"] == "All Quarters")
                    {
                        <td>@bill.FiscalPeriod</td>
                    }
                    
                    <td>
                        @if (bill.Amount != null)
                        {
                            @String.Format("{0:.##}", bill.Amount)
                        }
                    </td>
                    @if(category != null)
                    {
                        <td>
                            @category.Costs
                        </td>
                        <td>
                            @bill.Quantity
                        </td>
                        <td>
                            @if (!String.IsNullOrEmpty(category.UOM))
                            {
                                @category.UOM
                            }
                        </td>
                    }
                    else
                    {
                        <td>

                        </td>
                        <td>
                            @bill.Quantity
                        </td>
                        <td>

                        </td>
                    }
                    <td>
                        @if (client != null && !String.IsNullOrEmpty(client.ExpenseAuthorityName))
                        {
                            @client.ExpenseAuthorityName
                        } 
                    </td>
                    <td>
                        @bill.CreatedBy
                    </td>
                    <td>
                        <a asp-controller="Bills"
                           asp-action="Details"
                           asp-route-id="@bill.Id">See more</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>
    

</div>


   <script>
        function flipMeBool(){
          @ViewData["MeFilter"] = !@ViewData["MeFilter"];
        };
   </script>