@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@using Service_Billing.ViewModels;
@using System.Security.Claims

@{
    ViewData["Title"] = "Quarterly Report";
    Layout = "_Layout";
}


@{
    IEnumerable<Ministry> ministries = ViewData["Ministries"] as IEnumerable<Ministry>;
    ChargeIndexSearchParamsModel searchModel = ViewData["searchModel"] as ChargeIndexSearchParamsModel;
    if (string.IsNullOrEmpty(searchModel?.QuarterFilter))
        searchModel.QuarterFilter = "Current Quarter";
    bool current = searchModel.QuarterFilter == "current";
    bool previous = searchModel.QuarterFilter == "previous";
    bool next = searchModel.QuarterFilter == "next";
    bool all = searchModel.QuarterFilter == "All Quarters";
    List<SelectListItem> serviceCategories = new List<SelectListItem>();

    foreach(ServiceCategory serviceCategory in ViewBag.ServiceCategories)
    {
        serviceCategories.Add(new SelectListItem 
                { Value = serviceCategory.ServiceId.ToString(), Text = serviceCategory.Name, Selected = (searchModel.CategoryFilter != null && searchModel.CategoryFilter.Contains(serviceCategory.ServiceId)) }
        );
    }

}

<h1>Service Billing Charges</h1>

@if (Model != null && !Model.Any())
{
    if (searchModel?.ClientNumber > 0)
    {
        <h3>No charges for client number @searchModel?.ClientNumber have been found for the selected fiscal period. You can try searching previous or all quarters, or clearing other search filters.</h3>
    }
    else
    {
        <h3>
            No charges matching your search parameters have been found. Try searching in another quarter,
            or change your filter parameters.
        </h3>
    }
}
<div class="row row-cols-1 row-cols-md-3 g-4">

    <h2>@searchModel?.QuarterFilter: @ViewData["FiscalPeriod"]</h2>
    @if (!User.IsInRole("GDXBillingService.User"))
    {
        <div class="table-filter-section">
            <form asp-action="Index" method="get">
                <fieldset>
                    <legend>Filter by...</legend>
                    <div class="ui-section">
                        <div>
                            <div id="quarter-select">
                                <label for="quarterFilter">Select Quarter</label>
                                <select name="quarterFilter">
                                    <option value="current" selected="@current">Current</option>
                                    <option value="previous" selected="@previous">Previous</option>
                                    <option value="next" selected="@next">Next</option>
                                    <option value="all" selected="@all">All</option>
                                </select>
                            </div>
                            <label for="ministryFilter">Organization</label>
                            <select name="ministryFilter">
                                <option value="" disabled selected hidden></option>
                                @if (ministries != null)
                                {
                                    foreach (Ministry ministry in ministries)
                                    {
                                        string selectedMinistry = "";
                                        if (!String.IsNullOrEmpty(searchModel?.MinistryFilter))
                                            selectedMinistry = searchModel.MinistryFilter;
                                            
                                        if (!String.IsNullOrEmpty(selectedMinistry) && selectedMinistry == $"{ministry.Title}")
                                        {
                                            <option selected="true" value="@ministry.Acronym">@ministry.Acronym - @ministry.Title</option>
                                        }
                                        else
                                        {
                                            <option value="@ministry.Acronym">@ministry.Acronym - @ministry.Title</option>
                                        }
                                    }
                                }
                            </select>
                        </div>
                        <div>
                            <label for="titleFilter">Program</label>
                            <input type="text" name="titleFilter" value="@searchModel?.TitleFilter" />
                            <div id="category-multiselect">
                                <label for="categoryFilter">Service Category</label>
                                <select name="categoryFilter" id="categoryFilter" value="@searchModel?.CategoryFilter" multiple>
                                    <option value="-1"></option>
                                    @foreach (ServiceCategory category in ViewBag.ServiceCategories)
                                    {
                                        if (category.IsActive)
                                        {
                                            if (searchModel?.CategoryFilter != null && searchModel.CategoryFilter.Contains(category.ServiceId))
                                            {
                                                <option value="@category.ServiceId" selected>@category.Name</option>
                                            }
                                            else
                                            {
                                                <option value="@category.ServiceId">@category.Name</option>
                                            }
                                        }
                                    }
                                </select>
                            </div>
                            <label for="authorityFilter">Expense Authority</label>
                            <input type="text" name="authorityFilter" value="@searchModel?.AuthorityFilter" />
                            <label for="clientNumber">GDX Client No.</label>
                            <input type="number" name="clientNumber" value="@searchModel?.ClientNumber" />
                            <label for="keyword">Keyword</label>
                            <input type="text" name="keyword" value="@searchModel.Keyword" />
                            @* <label for="inactive">Include Inactive</label>
                        <input type="checkbox" name="inactive" checked="@ViewData["Inactive"]" />
                        @ViewData["Inactive"] *@
                        </div>
                        <input type="text" name="quarterFilter" value="@searchModel.QuarterFilter" hidden />
                    </div>
                    <div class="ui-section-buttons">
                        <div class="option-buttons">
                            <input type="submit" value="Filter" class="btn btn-default" /> |
                            <a asp-action="Index">Back to Full List</a>
                            @if (Model != null)
                            {
                                <div>Found @Model.Count() results</div>
                            }
                            else
                            {
                                <div>No results were returned</div>
                            }
                        </div>

                    </div>
                </fieldset>
                @if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded)
                {
                    <div class="create-new-button">
                        <input type="submit" value="Create New Charge" formaction="/Bills/Create" formmethod="get" />
                    </div>
                }
                <div class="export-button">
                    <input type="submit" value="Export to Excel" formaction="Bills/WriteToExcel" formmethod="get" title="Based on filter settings, not necessarily what the list below displays." />
                    @if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded)
                    {
                        <input type="submit" value="Run Report" formaction="/Bills/ShowReport" formmethod="get" title="Based on filter settings, not necessarily what the list below displays." />
                    }
                </div>
            </form>
        </div>
    }
  @*   <partial name="ChargesTable" model="searchModel" /> *@
    <div id="chargesTable"></div>
    <div id="loading-card">
        <div class="table-loading-spanner show">
            <div class="loader"></div>
            <p>Loading...</p>
        </div>
    </div>
</div>

@section Scripts
{
    <script>
        $(document).ready(() => {
            var body = @Json.Serialize(searchModel);
            var url = "../../Bills/GetBillsTable";
            $.post(url, body, (res) => {
                $("#chargesTable").html(res);
                $("div.table-loading-spanner").addClass("hide");
                $("div.table-loading-overlay").addClass("hide");
            });
        });

        $("input[type='submit']").click(function () {
            $("div.table-loading-spanner").addClass("show");
            $("div.table-loading-overlay").addClass("show");
        });
    </script>
}