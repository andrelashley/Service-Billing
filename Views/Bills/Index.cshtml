@using Microsoft.AspNetCore.Authorization
@inject IAuthorizationService AuthorizationService

@using Service_Billing.ViewModels;
@model AllBillsViewModel;
@{
    IEnumerable<Ministry> ministries = ViewData["Ministries"] as IEnumerable<Ministry>;
    bool current = ViewData["Quarter"] == "Current Quarter";
    bool previous = ViewData["Quarter"] == "Previous Quarter";
    bool next = ViewData["Quarter"] == "Next Quarter";
    bool all = ViewData["Quarter"] == "All Quarters";
}

<h1>Charges</h1>

@if (!Model.Bills.Any())
{
    if (!String.IsNullOrEmpty(ViewData["ClientNumber"].ToString()) && int.Parse(ViewData["ClientNumber"].ToString()) > 0)
    {
        <h3>No charges for client number @ViewData["ClientNumber"] have been found for the selected fiscal period. You can try searching previous or all quarters, or clearing other search filters.</h3>
    }
    else
    {
        <h3>
            No charges matching your search parameters have been found. Try searching in another quarter,
            or change your filter parameters.
        </h3>
    }
}
<div class="row row-cols-1 row-cols-md-3 g-4">

    <h2>Fiscal Period: @ViewData["Quarter"]</h2>

    <div class="table-filter-section">
        <form asp-action="Index" method="get">
            <fieldset>
                <legend>Filter by...</legend>
                <div class="ui-section">
                    <div>
                        <div id="quarter-select">
                            <label for="quarterFilter">Select Quarter</label>
                            <select name="quarterFilter">
                                <option value="current" selected="@current">Current</option>
                                <option value="previous" selected="@previous">Previous</option>
                                <option value="next" selected="@previous">Next</option>
                                <option value="all" selected="@all">All</option>
                            </select>
                        </div>
                        <label for="ministryFilter">Ministry</label>
                        <select name="ministryFilter">
                            <option value="" disabled selected hidden></option>
                            @if (ministries != null)
                            {
                                foreach (Ministry ministry in ministries)
                                {
                                    string selectedMinistry = "";
                                    if (ViewData["MinistryFilter"] != null)
                                        selectedMinistry = ViewData["MinistryFilter"].ToString();

                                    if (!String.IsNullOrEmpty(selectedMinistry) && selectedMinistry == ministry.Acronym)
                                    {
                                        <option selected="true" value="@ministry.Acronym">@ministry.Acronym - @ministry.Title</option>
                                    }
                                    else
                                    {
                                        <option value="@ministry.Acronym">@ministry.Acronym - @ministry.Title</option>
                                    }
                                }
                            }
                        </select>
                    </div>
                    <div>
                        <label for="titleFilter">Title</label>
                        <input type="text" name="titleFilter" value="@ViewData["TitleFilter"]" />
                        <label for="categoryFilter">Service Category</label>
                        <select name="categoryFilter" value="@ViewData["CategoryFilter"]">
                            <option value="-1"></option>
                            @foreach (ServiceCategory category in ViewBag.ServiceCategories)
                            {
                                if (ViewData["CategoryFilter"] != null && category.ServiceId == (int)ViewData["CategoryFilter"])
                                {
                                    <option value="@category.ServiceId" selected>@category.Name</option>
                                }
                                else
                                {
                                    <option value="@category.ServiceId">@category.Name</option>
                                }
                            }
                        </select>
                        <label for="authorityFilter">Expense Authority</label>
                        <input type="text" name="authorityFilter" value="@ViewData["AuthorityFilter"]" />
                        <label for="clientNumber">Client #</label>
                        <input type="number" name="clientNumber" value="@ViewData["ClientNumber"]" />
                        
                        <label for="clientNumber">Keyword</label>
                        <input type="text" name="keyword" value="@ViewData["Keyword"]" />

                    </div>
                    <input type="text" name="quarterFilter" value="@ViewData["QuarterFilter"]" hidden />
                </div>
                <div class="ui-section-buttons">
                    <div class="option-buttons">
                        <input type="submit" value="Filter" class="btn btn-default" /> |
                        <a asp-action="Index">Back to Full List</a>
                    </div>

                </div>
            </fieldset>
            @if ((await AuthorizationService.AuthorizeAsync(User, "RequireFinancialOfficerRole")).Succeeded)
            {
                <div class="create-new-button">
                    <input type="submit" value="Create New Charge" formaction="Bills/Create" formmethod="get" />
                </div>
            }
            <div class="export-button">
                <input type="submit" value="Export to CSV" formaction="Bills/WriteToCSV" formmethod="get" title="Based on filter settings, not necessarily what the list below displays." />
                @*   @if ((await AuthorizationService.AuthorizeAsync(User, "RequireOwnerRole")).Succeeded)
                { *@
                <input type="submit" value="Run Report" formaction="Bills/ShowReport" formmethod="get" title="Based on filter settings, not necessarily what the list below displays." />
                @* } *@
            </div>
        </form>
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th scope="col">Client #</th>
                <th scope="col">Client Name</th>
                <th scope="col">Title</th>
                <th scope="col">URL or IDIR</th>
                <th scope="col">Service Category</th>
                @if (ViewData["Quarter"] == "All Quarters")
                {
                    <th>Fiscal Period</th>
                }
                <th scope="col">Amount</th>
                <th scope="col">Unit Price</th>
                <th scope="col">Quantity</th>
                <th scope="col">UOM</th>
                <th scope="col">Aggregated Financial Code</th>
                <th scope="col">Expense Authority</th>
                <th>Details</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var bill in Model.Bills)
            {
                var category = Model.ServiceCategories.FirstOrDefault(s => s.ServiceId == bill.ServiceCategoryId);
                var client = Model.ClientAccounts.FirstOrDefault(c => c.Id == bill.ClientAccountId);
                <tr>
                    <td>
                        <a asp-controller="ClientAccount"
                           asp-action="Details"
                           asp-route-id="@bill.ClientAccountId">@bill.ClientAccountId</a>
                    </td>
                    <td>@bill.ClientName</td>
                    <td>@bill.Title</td>
                    <td>@bill.IdirOrUrl</td>
                    <td>
                        @{

                            if (category != null)
                            {
                                @category.Name
                                ;
                            }
                        }
                    </td>
                    @if (ViewData["Quarter"] == "All Quarters")
                    {
                        <td>@bill.FiscalPeriod</td>
                    }

                    <td>
                        @if (bill.Amount != null)
                        {
                            @String.Format("{0:.##}", bill.Amount)
                        }
                    </td>
                    @if (category != null)
                    {
                        <td>
                            @category.Costs
                        </td>
                        <td>
                            @bill.Quantity
                        </td>
                        <td>
                            @if (!String.IsNullOrEmpty(category.UOM))
                            {
                                @category.UOM
                            }
                        </td>
                    }
                    else
                    {
                        <td>
                        </td>
                        <td>
                            @bill.Quantity
                        </td>
                        <td>
                        </td>
                    }
                    <td>
                        @bill.AggregateGLCoding
                    </td>
                    <td>
                        @if (client != null && !String.IsNullOrEmpty(client.ExpenseAuthorityName))
                        {
                            @client.ExpenseAuthorityName
                        }
                    </td>
                    <td>
                        <a asp-controller="Bills"
                           asp-action="Details"
                           asp-route-id="@bill.Id">See more</a>
                    </td>
                </tr>
            }
        </tbody>
    </table>


</div>


<script>
    function flipMeBool() {
    @ViewData["MeFilter"] = !@ViewData["MeFilter"];
    };
</script>