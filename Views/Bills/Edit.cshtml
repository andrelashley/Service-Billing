@model Service_Billing.ViewModels.BillViewModel

@{
    ViewData["Title"] = "Edit";
    Layout = "_Layout";
}
@{
    IEnumerable<ServiceCategory> categories = Model.ServiceCategories as IEnumerable<ServiceCategory>;
    bool mustChangeServiceCategory = false;
}

<h1>Edit</h1>

<h4>Bill</h4>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="Edit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <input type="hidden" asp-for="@Model.bill.id" />
          
            <div class="form-group">
                <label asp-for="@Model.bill.clientName">Client: </label>
                <input asp-for="@Model.bill.clientName"id="clientInput" class="form-control" />
                <span asp-validation-for="@Model.bill.clientName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.bill.clientAccountId">Client ID: </label>
                <input asp-for="@Model.bill.clientAccountId" id="clientIdInput" class="form-control" />
                <span asp-validation-for="@Model.bill.clientAccountId" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.bill.title" class="control-label"></label>
                <input asp-for="@Model.bill.title" class="form-control" id="title"/>
                <span asp-validation-for="@Model.bill.title" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.bill.idirOrUrl" class="control-label"></label>
                <input asp-for="@Model.bill.idirOrUrl" class="form-control" />
                <span asp-validation-for="@Model.bill.idirOrUrl" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.bill.serviceCategoryId" class="control-label"></label>
                <select asp-for="@Model.bill.serviceCategoryId" class="form-control" id="categorySelect">
                    @foreach(ServiceCategory category in categories)
                    {
                        if (category.serviceId == Model.bill.serviceCategoryId)
                        {
                            if(!category.isActive)
                            {
                                <option class="inactive-service-category" value="@category.serviceId" selected>@category.name</option>
                                {
                                    mustChangeServiceCategory = true;
                                }
                            ;
                            }
                        }
                        else if(category.isActive)
                        {
                            <option value="@category.serviceId">@category.name</option>
                        }
                    }
                </select>
                <span asp-validation-for="@Model.bill.serviceCategoryId" class="text-danger"></span>
            </div>
                <div class="change-category-message" id="categoryWarning" visible="@mustChangeServiceCategory">
                    <p>This appears to be an older service category that is no longer active.</p>
                    <p>A newer, active service category should be selectable from the dropdown list.</p>    
                </div>
            <div class="form-group">
                <label asp-for="@Model.bill.amount" class="control-label"></label>
                <input asp-for="@Model.bill.amount" class="form-control" id="amount"/>
                <span asp-validation-for="@Model.bill.amount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.bill.fiscalPeriod" class="control-label"></label>
                <input asp-for="@Model.bill.fiscalPeriod" class="form-control" />
                <span asp-validation-for="@Model.bill.fiscalPeriod" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.bill.quantity" class="control-label"></label>
                <input asp-for="@Model.bill.quantity" class="form-control" id="quantity"/>
                <span asp-validation-for="@Model.bill.quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.bill.ticketNumberAndRequester" class="control-label"></label>
                <input asp-for="@Model.bill.ticketNumberAndRequester" class="form-control" />
                <span asp-validation-for="@Model.bill.ticketNumberAndRequester" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.bill.dateModified" class="control-label"></label>
                <input asp-for="@Model.bill.dateModified" class="form-control" readonly="true" />
                <span asp-validation-for="@Model.bill.dateModified" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.bill.billingCycle" class="control-label"></label>
                <input asp-for="@Model.bill.billingCycle" class="form-control" />
                <span asp-validation-for="@Model.bill.billingCycle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="@Model.bill.createdBy" class="control-label"></label>
                <input asp-for="@Model.bill.createdBy" class="form-control" />
                <span asp-validation-for="@Model.bill.createdBy" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
    <script src="https://code.jquery.com/ui/1.13.2/jquery-ui.js"></script>
    <script>
        $(document).ready(function () {
            calculateAmount = () => {
                var url = "../../Bills/GetBillAmount?serviceId=" + $("#categorySelect").val() + "&quantity=" + $("#quantity").val();
                var xhr = new XMLHttpRequest();
                xhr.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        $("#amount").val(xhr.responseText);
                    }
                };
                xhr.open('get', url);
                xhr.send();
            }
            $("#categorySelect").on("change" , (e) => {
               calculateAmount();
                console.log($("#categorySelect").val());
               if($("#categorySelect").val() < 21){
                   $("#categoryWarning").hide();
               }
            });
            $("#quantity").on("change", (e) => {
                calculateAmount();
            });

            createClientSelect = () => {
                var clientsMatchingSearch = [];
                var url = "../../Bills/GetClients";
                var xhr = new XMLHttpRequest();
                xhr.onreadystatechange = function () {
                    if (this.readyState == 4 && this.status == 200) {
                        clientsMatchingSearch = [];
                        var data = JSON.parse(xhr.response);

                        for (const client in data) {
                            clientsMatchingSearch.push({ label: data[client].clientName, "clientId": data[client].accountId });
                        }

                        $("#clientInput").autocomplete({
                            source: clientsMatchingSearch
                        });
                    }
                };
                xhr.open('get', url);
                xhr.send();

                $("#clientInput").autocomplete({
                    source: clientsMatchingSearch,
                    delay: 500,
                    select: function(event, ui){
                        console.log("Select!");
                        console.log(ui.item.clientId);
                        console.log(ui.item.label);
                        $("#clientIdInput").val(ui.item.clientId);
                        $("#clientInput").text(ui.item.label);
                    },
                    minLength: 0
                });
            }
            createClientSelect();
        });
    </script>
}

