@model Service_Billing.Models.BillEntryViewModel

@{
    ViewData["Title"] = "NewBill";
}

<h1>Enter a new bill</h1>

<h4>BillEntryViewModel</h4>
<hr />
<div class="row" id='app'>
    <div class="col-md-4">
        <form asp-action="Create">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            <div class="form-group">
                <label asp-for="RequestDate" class="control-label"></label>
                <input asp-for="RequestDate" class="form-control" id="request-date" onchange="onStartDateChanged()" />
                <span asp-validation-for="RequestDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="BillingCycle" class="control-label"></label>
                <input asp-for="BillingCycle" class="form-control" id="billing-cycle" asp-format="{0:yyyy-MM-dd}" readonly="@(true)" />
                <span asp-validation-for="BillingCycle" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="FiscalPeriod" class="control-label"></label>
                <input asp-for="FiscalPeriod" class="form-control" id="fiscal-period" readonly="@(true)" />
                <span asp-validation-for="FiscalPeriod" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Account" class="control-label"></label>
                <input asp-for="Account" class="form-control" />
                <span asp-validation-for="Account" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="TicketNumber" class="control-label"></label>
                <input asp-for="TicketNumber" class="form-control" />
                <span asp-validation-for="TicketNumber" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ServiceCategory" class="control-label"></label>
                <input asp-for="ServiceCategory" class="form-control" />
                <span asp-validation-for="ServiceCategory" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Quantity" class="control-label"></label>
                <input asp-for="Quantity" class="form-control" />
                <span asp-validation-for="Quantity" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Ammount" class="control-label"></label>
                <input asp-for="Ammount" class="form-control" />
                <span asp-validation-for="Ammount" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ServiceStartDate" class="control-label"></label>
                <input asp-for="ServiceStartDate" class="form-control" onchange="this.form.submit()" />
                <span asp-validation-for="ServiceStartDate" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="ServiceEndDate" class="control-label"></label>
                <input asp-for="ServiceEndDate" class="form-control" />
                <span asp-validation-for="ServiceEndDate" class="text-danger"></span>
            </div>
            <div class="form-group form-check">
                <label class="form-check-label">
                    <input class="form-check-input" asp-for="IsOneTime" /> @Html.DisplayNameFor(model => model.IsOneTime)
                </label>
            </div>
            <div class="form-group">
                <label asp-for="AffectedSiteOrPerson" class="control-label"></label>
                <input asp-for="AffectedSiteOrPerson" class="form-control" />
                <span asp-validation-for="AffectedSiteOrPerson" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="RequesterName" class="control-label"></label>
                <input asp-for="RequesterName" class="form-control" />
                <span asp-validation-for="RequesterName" class="text-danger"></span>
            </div>
            <div class="form-group">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

<script>
    // Get string for Fiscal Period, and date for start of billing cycle
    function onStartDateChanged(event){
        const startDateString = document.getElementById("request-date").value;
        const startDate = new Date(startDateString);
        var month = startDate.getMonth();
        //let billingCycleString = "This string appears when the billing cycle isn't computed properly.";
        let billingCycle = new Date();
        let quarter = -1;
        console.log(`month: ${month}`);
       switch (month) {
           case 0: case 1: case 2:
                quarter = 4;
                billingCycle = new Date(`${startDate.getFullYear()}`, "00", "01");
                break;
           case 3: case 4: case 5:
                quarter = 1;
                billingCycle = new Date(`${startDate.getFullYear()}`, "03", "01");
                break;
           case 6: case 7: case 8:
                quarter = 2;
                billingCycle = new Date(`${startDate.getFullYear()}`, "06", "01");
                break;
           case 9: case 10: case 11:
                quarter = 3;
                billingCycle = new Date(`${startDate.getFullYear()}`, "09", "01");
                break;
       };
        document.getElementById("fiscal-period").value =`Fiscal ${startDate.getFullYear()}/${startDate.getFullYear() + 1}, Quarter ${quarter}`;
        document.getElementById("billing-cycle").value = billingCycle.toDateString("yyyy-mm-dd");
        console.log(billingCycle.toDateString("yyyy-mm-dd"));
    }

</script>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
