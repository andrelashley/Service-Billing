// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using ServiceBilling.BillingManagement.UI.Models;

#nullable disable

namespace ServiceBilling.BillingManagement.UI.Migrations
{
    [DbContext(typeof(DataContext))]
    [Migration("20230826005434_AddModelContexts")]
    partial class AddModelContexts
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("ServiceBilling.BillingManagement.UI.Models.Charge", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<decimal?>("Amount")
                        .HasColumnType("numeric");

                    b.Property<string>("BillingCycle")
                        .HasColumnType("text");

                    b.Property<int>("ClientAccountId")
                        .HasColumnType("integer");

                    b.Property<string>("ClientName")
                        .HasColumnType("text");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("text");

                    b.Property<DateTime?>("DateCreated")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("DateModified")
                        .HasColumnType("timestamp with time zone");

                    b.Property<string>("FiscalPeriod")
                        .HasColumnType("text");

                    b.Property<string>("IdirOrUrl")
                        .HasColumnType("text");

                    b.Property<decimal?>("Quantity")
                        .HasColumnType("numeric");

                    b.Property<Guid>("ServiceCategoryId")
                        .HasColumnType("uuid");

                    b.Property<string>("TicketNumberAndRequester")
                        .HasColumnType("text")
                        .HasColumnName("ticketNumberAndRequesterName");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Charges");
                });

            modelBuilder.Entity("ServiceBilling.BillingManagement.UI.Models.ClientAccount", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<short?>("ClientNumber")
                        .HasMaxLength(3)
                        .HasColumnType("smallint");

                    b.Property<string>("ClientTeam")
                        .HasColumnType("text");

                    b.Property<string>("ExpenseAuthorityName")
                        .HasColumnType("text");

                    b.Property<bool?>("IsApprovedByEA")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("Project")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<string>("ResponsibilityCentre")
                        .HasMaxLength(5)
                        .HasColumnType("character varying(5)");

                    b.Property<short?>("STOB")
                        .HasMaxLength(4)
                        .HasColumnType("smallint");

                    b.Property<int?>("ServiceLine")
                        .HasMaxLength(5)
                        .HasColumnType("integer");

                    b.Property<string>("ServicesEnabled")
                        .HasColumnType("text");

                    b.Property<int?>("TeamId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("ClientAccounts");
                });

            modelBuilder.Entity("ServiceBilling.BillingManagement.UI.Models.ClientTeam", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Approver")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("FinancialContact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Name")
                        .HasColumnType("text");

                    b.Property<string>("PrimaryContact")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("ClientTeams");
                });

            modelBuilder.Entity("ServiceBilling.BillingManagement.UI.Models.Ministry", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Acronym")
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .HasColumnType("text");

                    b.HasKey("Id");

                    b.ToTable("Ministries");
                });

            modelBuilder.Entity("ServiceBilling.BillingManagement.UI.Models.ServiceCategory", b =>
                {
                    b.Property<Guid>("ServiceCategoryId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uuid");

                    b.Property<string>("Costs")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasMaxLength(1000)
                        .HasColumnType("character varying(1000)");

                    b.Property<string>("GdxBusinessArea")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<bool>("IsActive")
                        .HasColumnType("boolean");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("character varying(100)");

                    b.Property<string>("UOM")
                        .IsRequired()
                        .HasColumnType("text");

                    b.HasKey("ServiceCategoryId");

                    b.ToTable("ServiceCategories");
                });
#pragma warning restore 612, 618
        }
    }
}
