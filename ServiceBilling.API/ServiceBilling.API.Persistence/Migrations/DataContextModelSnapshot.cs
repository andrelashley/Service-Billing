// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using ServiceBilling.API.Persistence;

#nullable disable

namespace ServiceBilling.API.Persistence.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("ServiceBilling.API.Domain.Entities.ClientAccount", b =>
                {
                    b.Property<Guid>("ClientAccountId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ClientTeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Number")
                        .HasColumnType("int");

                    b.HasKey("ClientAccountId");

                    b.HasIndex("ClientTeamId")
                        .IsUnique();

                    b.ToTable("ClientAccounts");
                });

            modelBuilder.Entity("ServiceBilling.API.Domain.Entities.ClientTeam", b =>
                {
                    b.Property<Guid>("ClientTeamId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CreatedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("LastModifiedBy")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("LastModifiedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("ClientTeamId");

                    b.ToTable("ClientTeams");
                });

            modelBuilder.Entity("ServiceBilling.API.Domain.Entities.ClientAccount", b =>
                {
                    b.HasOne("ServiceBilling.API.Domain.Entities.ClientTeam", "ClientTeam")
                        .WithOne("ClientAccount")
                        .HasForeignKey("ServiceBilling.API.Domain.Entities.ClientAccount", "ClientTeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("ClientTeam");
                });

            modelBuilder.Entity("ServiceBilling.API.Domain.Entities.ClientTeam", b =>
                {
                    b.Navigation("ClientAccount");
                });
#pragma warning restore 612, 618
        }
    }
}
